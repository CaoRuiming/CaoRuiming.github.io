[{"authors":["admin"],"categories":null,"content":"Raymond Cao is a third-year undergraduate at Brown University with focuses in software fundamentals and machine learning/AI. He enjoys converting teaching others the ways of computer science and spends too much time researching new JavaScript libraries, computer hardware, and convenient open source tools.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://caoruiming.github.io/author/raymond-cao/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/raymond-cao/","section":"authors","summary":"Raymond Cao is a third-year undergraduate at Brown University with focuses in software fundamentals and machine learning/AI. He enjoys converting teaching others the ways of computer science and spends too much time researching new JavaScript libraries, computer hardware, and convenient open source tools.","tags":null,"title":"Raymond Cao","type":"authors"},{"authors":[],"categories":[],"content":"The Brown Political Review (BPR) is a student run publication at Brown University. In the fall of 2018, I was hired by BPR to lead its effort to build a new website to replace its slow, aging one.\nThe original website was an old WordPress site that used an outdated premade theme. Partnering with designers from the Creative Board of BPR, we planned out the look and functionality of the new website from the end of 2018 to the beginning of 2019. I completed the bulk of the website development over the summer of 2019 so that we could have a grand reveal of the new design during the fall 2020 activities fair at Brown University.\nWe built the new website theme from scratch and used the following technologies:\n  WordPress 5 as the CMS (content management system)  Tonik starter theme as the base of the new theme  Bootstrap 3 and SCSS for styling  jQuery for custom menu behavior  D3.js integration to support interactive content on posts  Advanced Custom Fields for customizing page elements without code changes  We also performed content migration and changed hosting services as part of this project.\nYou can see the website at http://brownpoliticalreview.org/. According to page loading benchmarks from Pingdom, this website loads up to 10 times faster than the one that it replaces.\nCurrently, I continue to lead the development and maintenance of the Brown Political Review\u0026rsquo;s website.\n","date":1588350630,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588350630,"objectID":"d83cb6b0625d03b14c60361e03ba0c93","permalink":"https://caoruiming.github.io/project/brown-political-review/","publishdate":"2020-05-01T12:30:30-04:00","relpermalink":"/project/brown-political-review/","section":"project","summary":"The Brown Political Review (BPR) is a student run publication at Brown University. In the fall of 2018, I was hired by BPR to lead its effort to build a new website to replace its slow, aging one.","tags":["WordPress","D3.js","SCSS"],"title":"Brown Political Review Website","type":"project"},{"authors":[],"categories":[],"content":"This is a guide primarily meant to help Brown University Computer Science students get started with working remotely on department machines. If you are not part of this audience, the following instructions may still be useful, but be sure to strip out the Brown-specific parts.\n Install Homebrew (skip if already installed). Install OSXFuse (skip if already installed). Run brew cask install osxfuse in terminal to install. You may need to restart your computer for the install to take effect since this involves a system extension. Install SSHFS (skip if already installed). Run brew install sshfs in terminal to install. In your home directory (~), create a Makefile (make a new text file and name it Makefile). Contents are detailed at the bottom of this page.  Make sure you put in your cs username in the file under CS_USERNAME. LOCAL_DIR is a file path where you want to mount SSHFS (there should be no existing folder for file under that file path). You probably don’t have to change this. Set CODE_EDITOR to the editor of your choice:  put atom if you want to use Atom put code if you want to use VSCode (make sure to install code command to PATH; here are instructions on how to do this) put subl if you want to use Sublime (if make open-in-editor doesn’t work for you later on, try looking at this)     In terminal under your home directory, run make key and input the password to your ssh private key. This way, you won’t have to enter your ssh password every time you ssh. In terminal under your home directory, run make ssh. Make sure you can log in properly. (You may need to enter you Banner password). Exit ssh by running the command exit. In terminal under your home directory, run make mount. This should mount the courses folder from CIT lab machines to the directory specified in the Makefile. If you get security prompts, just allow everything. In terminal under your home directory, run make open-in-editor. This should open the mounted course folder in the code editor of your choice. (If you have problems with this, try looking at the links in step 4.) Happy coding! Be sure to read the notes below to avoid/fix issues!  Notes:  To safely unmount/disconnect the sshfs drive, run make unmount in your home directory in terminal. If you get errors with make mount, try running make unmount before running make mount again. You will need to compile, run, and submit your CS work through SSH (in case you forgot, there a handly make ssh command in the Makefile!). Some things may work on your local machine, but a lot of stuff won’t. If you don’t want to input the password to you ssh key every time you SSH or mount, running make key will work; however, you will have to run this every time you restart your Mac (shutting down makes your Mac ‘forget’ the password to your key).  Makefile Contents # General Utils # Dependencies: osxfuse, sshfs # SSH \u0026amp; SSHFS Options LOCAL_DIR = ~/Documents/CSCI # local location where network location will mount CS_USERNAME = \u0026lt;insert username here!\u0026gt; CODE_EDITOR = code # use code for vscode, atom for atom, subl for sublime key: ssh-add -K ~/.ssh/id_rsa open-in-editor: $(LOCAL_DIR) $(CODE_EDITOR) $(LOCAL_DIR) mount: mkdir -pv $(LOCAL_DIR) sshfs $(CS_USERNAME)@pk-ssh.cs.brown.edu:course $(LOCAL_DIR) -oauto_cache,reconnect,defer_permissions,noappledouble,negative_vncache,volname=CSCI unmount: umount -f $(LOCAL_DIR) rmdir $(LOCAL_DIR) ssh: key ssh -AXY $(CS_USERNAME)@pk-ssh.cs.brown.edu  Photo by Goran Ivos on Unsplash\n","date":1577896069,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577896069,"objectID":"cf83fb58bb38dcfcf39a27e8b24c4efe","permalink":"https://caoruiming.github.io/post/sshfs-guide/","publishdate":"2020-01-01T12:27:49-04:00","relpermalink":"/post/sshfs-guide/","section":"post","summary":"This is a guide primarily meant to help Brown University Computer Science students get started with working remotely on department machines. If you are not part of this audience, the following instructions may still be useful, but be sure to strip out the Brown-specific parts.","tags":[],"title":"How to Set up SSHFS for Mac","type":"post"},{"authors":[],"categories":[],"content":"As the final project of Brown University\u0026rsquo;s Deep Learning course, I teamed up with 3 classmates to reimplement the models and reproduce the results from the paper Fake News Identification on Twitter with Hybrid CNN and RNN Models (2018).\nWe built three models using TensorFlow 2 that classified social media posts (in particular, Tweets), on 5 levels of truthfulness (levels defined by the Liar Dataset):\n an LSTM RNN an LSTM with dropout regularization an LSTM with a 1D CNN  My role in the project was pair programming with Daniel Kostovetsky to put together the three TensorFlow models. I also added on a live demo component for our project.\nTo see our final report containing our results, you can download it here. Below is an excerpt from our conclusion.\n Determining the truthfulness of a statement without context is a difficult problem. We were only able to achieve a 25.78% accuracy on our dataset, which may seem low, but is close to the paper’s 27% accuracy. For reference, we attempted to classify training examples by hand and achieved an accuracy that was far less than 25.78%, and in fact, no better than random guessing. Many statements in our dataset, such as “The economy bled $24 billion due to the government shutdown,” are virtually impossible to factually evaluate without an external reference. Others, such as “We have a federal government that thinks they have the authority to regulate our toilet seats,” are subjective, opinionated, or don’t have a well-defined truth value. Some statements did contain certain words that made them identifiable as true, or more frequently, false. For instance, the sentence “In the case of a catastrophic event, the Atlanta-area offices of the Centers for Disease Control and Prevention will self-destruct,” includes the word ‘self-destruct’ that is associated with fictional stories, implying that it is false. Perhaps our model learned to make classifications by looking for such words.\n You can find the source code of the project at https://github.com/CaoRuiming/gradient-ascent-project.\nPhoto by Mika Baumeister on Unsplash\n","date":1575236163,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575236163,"objectID":"49d84162218c65cba8bdf2a8dce03949","permalink":"https://caoruiming.github.io/project/gradient-ascent/","publishdate":"2019-12-01T17:36:03-04:00","relpermalink":"/project/gradient-ascent/","section":"project","summary":"As the final project of Brown University\u0026rsquo;s Deep Learning course, I teamed up with 3 classmates to reimplement the models and reproduce the results from the paper Fake News Identification on Twitter with Hybrid CNN and RNN Models (2018).","tags":["TensorFlow","Python"],"title":"Detecting Fake News with CNNs \u0026 RNNs","type":"project"},{"authors":[],"categories":[],"content":"This was my final project for Brown University\u0026rsquo;s Data Science course, and I worked in a group with 3 other classmates.\nThe purpose of our project was to pull in U.S. Census data and combine it with state and FCC-provided broadband deployment data to gain insight on trends in inequal American broadband availability and get a general sense of the state of deployment.\nMy personal role was performing a k-mean analysis on internet access choice in New York to find if the proportions of forms of broadband deployment could reveal the most economical way to build out networks and close the digital divide.\nOur intermediate and final blog reports on this project can be read at https://caoruiming.github.io/data-science-final-project/.\nYou can see the source code of the project at https://github.com/CaoRuiming/data-science-final-project.\nPhoto by Markus Spiske on Unsplash\n","date":1556748574,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556748574,"objectID":"9629f6f7f5e8ea98fa992546ceccf231","permalink":"https://caoruiming.github.io/project/broadband-data/","publishdate":"2019-05-01T18:09:34-04:00","relpermalink":"/project/broadband-data/","section":"project","summary":"This was my final project for Brown University\u0026rsquo;s Data Science course, and I worked in a group with 3 other classmates.\nThe purpose of our project was to pull in U.","tags":["D3.js","Python","Data Science"],"title":"Data Science on U.S. Broadband","type":"project"},{"authors":null,"categories":null,"content":"Privacy is a fundamental right. I collect no information through this website because I am too lazy to implement that.\nBe aware that the service that is used to host this site may collect data, and the embedded content may have their own privacy policies.\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://caoruiming.github.io/privacy/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/privacy/","section":"","summary":"Privacy is a fundamental right. I collect no information through this website because I am too lazy to implement that.\nBe aware that the service that is used to host this site may collect data, and the embedded content may have their own privacy policies.","tags":null,"title":"Privacy Policy","type":"page"},{"authors":null,"categories":null,"content":"Use this website at your own risk. I claim no responsiblity for negative outcomes (from my perspective) that may result from visiting this website.\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://caoruiming.github.io/terms/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/terms/","section":"","summary":"Use this website at your own risk. I claim no responsiblity for negative outcomes (from my perspective) that may result from visiting this website.","tags":null,"title":"Terms","type":"page"},{"authors":[],"categories":[],"content":"During Hack@Brown 2018, I worked with three other students to design and develop a React.js app that took in Chinese text and output the corresponding pinyin (a writing system that denotes the pronunciation of Chinese characters) as well as English translations of user-selected text. The application was built entirely out of open source technologies, works offline, and works across any platform that supports web browsing.\nThe purpose of this project was to assist English-speaking students in learning to read (simplified) Chinese. Every member of our hackathon project group enjoyed reading translated Chinese web novels in our free time, so we decided to build a tool to help us read the \u0026ldquo;raws\u0026rdquo; (i.e. the source material written in the original language).\nMy primary role on the team was the React.js developer, and I lead the technical development of our app.\nYou can view the source code of this project, Biang Biang, at https://github.com/CaoRuiming/biangbiang.\n","date":1525209562,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1525209562,"objectID":"959e25aadbbb67807c05b520386d72c1","permalink":"https://caoruiming.github.io/project/biang-biang/","publishdate":"2018-05-01T17:19:22-04:00","relpermalink":"/project/biang-biang/","section":"project","summary":"During Hack@Brown 2018, I worked with three other students to design and develop a React.js app that took in Chinese text and output the corresponding pinyin as well as English translations of user-selected text.","tags":["React.js"],"title":"Chinese Translation Application","type":"project"}]